{"version":3,"sources":["webpack:///node_modules/vue-awesome/components/Icon.vue","webpack:///./node_modules/vue-awesome/components/Icon.vue?8f50","webpack:///./node_modules/vue-awesome/components/Icon.vue","webpack:///./src/constants.js","webpack:///src/components/ComorbiditiesList.vue","webpack:///./src/components/ComorbiditiesList.vue?3633","webpack:///./src/components/ComorbiditiesList.vue","webpack:///./src/tag.js","webpack:///./src/configuration.js","webpack:///./src/PreopRecommendation.js","webpack:///src/App.vue","webpack:///./src/App.vue?cbfc","webpack:///./src/App.vue","webpack:///./src/main.js"],"names":["icons","Icon","name","props","type","String","validator","val","console","warn","scale","Number","spin","Boolean","inverse","pulse","flip","label","data","x","y","childrenWidth","childrenHeight","outerScale","computed","normalizedScale","this","isNaN","klass","fa-icon","fa-spin","fa-flip-horizontal","fa-flip-vertical","fa-inverse","fa-pulse","icon","box","width","height","ratio","_icon","Math","max","style","fontSize","raw","ids","replace","match","quote","id","uniqueId","cursor","toString","rawId","_","pointerId","mounted","_this","$children","length","forEach","child","register","paths","d","push","polygons","points","components_Icon","render","_vm","_h","$createElement","_c","_self","class","attrs","version","role","aria-label","viewBox","_t","_l","path","i","_b","key","_e","_v","polygon","domProps","innerHTML","_s","staticRenderFns","Component","__webpack_require__","normalizeComponent","ssrContext","__webpack_exports__","Condition","AtrialFib","Defib","CAD","CerebralDisease","VHD","HeartFail","PVD","PulmonaryVascular","PulmDisease","Risk","Bleeding","Anemia","KidneyDisease","Diabetes","Malignancy","Hepatic","Adrenal","Pituitary","Endocrine","Thyroid","Digoxin","Lithium","Diuretics","ACEI","ARB","NSAIDS","Anticoagulant","Antiplatelet","Steroid","Exam","GnS","ECG","CBC","RenPanel","PTTINR","LFT","Gluc","HbA1C","CXR","TSH","Glossary","CardiacStent","ActiveBleeding","Renal","ComorbiditiesList","components","currentComorbiditySelection","Object","cardioDiseases","comorbidity","glossary","check","pulmoDiseases","otherDiseases","medications","methods","aggregateConditions","comorbidityArray","index","array","$emit","generateID","element","prefix","conditionNameArray","keys_default","pdIndex","otherIndex","medIndex","hasEntry","item","resetData","assign_default","$data","$options","call","components_ComorbiditiesList","staticClass","on","click","$event","checked","directives","rawName","value","expression","modifiers","hover","bottom","title","src_components_ComorbiditiesList","examCollection","exams","conditionalExams","validityPeriods","tag_ConditionalExam","ConditionalExam","conditionPhrase","classCallCheck_default","Tag","arguments","undefined","assert","values_default","indexOf","addExams","conditionalExamList","iter","entries_default","j","addConditionalExams","GetConditionalExams","Validity","exam","validityString","Is patient on chemo?","Is patient on Wafarin/Heparins?","PreopRecommendation_ExamSummary","ExamSummary","ExamValidity","GetExamValidity","App","ComorbitiesList","sidebarActive","resultArray","$refs","disclaimer","show","updateArray","includes","splice","getExams","examSummary","patientConditions","examAggregation","set_default","a","conditionalExamAggregation","add","conditionPhrasesUsed","filter","c","apply","toConsumableArray_default","map","ce","e","has","concat","PatientExamsNeeded","results","getValidity","comoList","selectortype_template_index_0_src_App","ref","size","centered","ok-only","ok-title","no-close-on-backdrop","hide-header-close","footer-class","header-class","staticStyle","text-align","examName","sticky","variant","_m","clickEvent","margin-right","src_App","App_normalizeComponent","condition","message","vue_esm","config","productionTip","log","component","use","es","el","template"],"mappings":"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","file":"static/js/app.a0451cb12de6dfab1340.js","sourcesContent":["<template>\n  <svg version=\"1.1\"\n    :class=\"klass\"\n    :role=\"label ? 'img' : 'presentation'\"\n    :aria-label=\"label\"\n    :x=\"x\"\n    :y=\"y\"\n    :width=\"width\"\n    :height=\"height\"\n    :viewBox=\"box\"\n    :style=\"style\">\n    <slot>\n      <template v-if=\"icon && icon.paths\">\n        <path v-for=\"(path, i) in icon.paths\" :key=\"`path-${i}`\" v-bind=\"path\"/>\n      </template>\n      <template v-if=\"icon && icon.polygons\">\n        <polygon v-for=\"(polygon, i) in icon.polygons\" :key=\"`polygon-${i}`\" v-bind=\"polygon\"/>\n      </template>\n      <template v-if=\"icon && icon.raw\"><g v-html=\"raw\"></g></template>\n    </slot>\n  </svg>\n</template>\n\n<style>\n.fa-icon {\n  display: inline-block;\n  fill: currentColor;\n}\n\n.fa-flip-horizontal {\n  transform: scale(-1, 1);\n}\n\n.fa-flip-vertical {\n  transform: scale(1, -1);\n}\n\n.fa-spin {\n  animation: fa-spin 1s 0s infinite linear;\n}\n\n.fa-inverse {\n  color: #fff;\n}\n\n.fa-pulse {\n  animation: fa-spin 1s infinite steps(8);\n}\n\n@keyframes fa-spin {\n  0% {\n    transform: rotate(0deg);\n  }\n  100% {\n    transform: rotate(360deg);\n  }\n}\n</style>\n\n<script>\nlet icons = {}\n\nexport default {\n  name: 'icon',\n  props: {\n    name: {\n      type: String,\n      validator (val) {\n        if (val && !(val in icons)) {\n          console.warn(`Invalid prop: prop \"name\" is referring to an unregistered icon \"${val}\".` +\n            `\\nPlease make sure you have imported this icon before using it.`)\n          return false\n        }\n        return true\n      }\n    },\n    scale: [Number, String],\n    spin: Boolean,\n    inverse: Boolean,\n    pulse: Boolean,\n    flip: {\n      validator (val) {\n        return val === 'horizontal' || val === 'vertical'\n      }\n    },\n    label: String\n  },\n  data () {\n    return {\n      x: false,\n      y: false,\n      childrenWidth: 0,\n      childrenHeight: 0,\n      outerScale: 1\n    }\n  },\n  computed: {\n    normalizedScale () {\n      let scale = this.scale\n      scale = typeof scale === 'undefined' ? 1 : Number(scale)\n      if (isNaN(scale) || scale <= 0) {\n        console.warn(`Invalid prop: prop \"scale\" should be a number over 0.`, this)\n        return this.outerScale\n      }\n      return scale * this.outerScale\n    },\n    klass () {\n      return {\n        'fa-icon': true,\n        'fa-spin': this.spin,\n        'fa-flip-horizontal': this.flip === 'horizontal',\n        'fa-flip-vertical': this.flip === 'vertical',\n        'fa-inverse': this.inverse,\n        'fa-pulse': this.pulse\n      }\n    },\n    icon () {\n      if (this.name) {\n        return icons[this.name]\n      }\n      return null\n    },\n    box () {\n      if (this.icon) {\n        return `0 0 ${this.icon.width} ${this.icon.height}`\n      }\n      return `0 0 ${this.width} ${this.height}`\n    },\n    ratio () {\n      if (!this.icon) {\n        return 1\n      }\n      let { width, height } = this.icon\n      return Math.max(width, height) / 16\n    },\n    width () {\n      return this.childrenWidth || this.icon && this.icon.width / this.ratio * this.normalizedScale || 0\n    },\n    height () {\n      return this.childrenHeight || this.icon && this.icon.height / this.ratio * this.normalizedScale || 0\n    },\n    style () {\n      if (this.normalizedScale === 1) {\n        return false\n      }\n      return {\n        fontSize: this.normalizedScale + 'em'\n      }\n    },\n    raw () {\n      // generate unique id for each icon's SVG element with ID\n      if (!this.icon || !this.icon.raw) {\n        return null\n      }\n      let raw = this.icon.raw\n      let ids = {}\n      raw = raw.replace(/\\s(?:xml:)?id=([\"']?)([^\"')\\s]+)\\1/g, (match, quote, id) => {\n        let uniqueId = getId()\n        ids[id] = uniqueId\n        return ` id=\"${uniqueId}\"`\n      })\n      raw = raw.replace(/#(?:([^'\")\\s]+)|xpointer\\(id\\((['\"]?)([^')]+)\\2\\)\\))/g, (match, rawId, _, pointerId) => {\n        let id = rawId || pointerId\n        if (!id || !ids[id]) {\n          return match\n        }\n\n        return `#${ids[id]}`\n      })\n\n      return raw\n    }\n  },\n  mounted () {\n    if (!this.name && this.$children.length === 0) {\n      console.warn(`Invalid prop: prop \"name\" is required.`)\n      return\n    }\n\n    if (this.icon) {\n      return\n    }\n\n    let width = 0\n    let height = 0\n    this.$children.forEach(child => {\n      child.outerScale = this.normalizedScale\n\n      width = Math.max(width, child.width)\n      height = Math.max(height, child.height)\n    })\n    this.childrenWidth = width\n    this.childrenHeight = height\n    this.$children.forEach(child => {\n      child.x = (width - child.width) / 2\n      child.y = (height - child.height) / 2\n    })\n  },\n  register (data) {\n    for (let name in data) {\n      let icon = data[name]\n\n      if (!icon.paths) {\n        icon.paths = []\n      }\n      if (icon.d) {\n        icon.paths.push({ d: icon.d })\n      }\n\n      if (!icon.polygons) {\n        icon.polygons = []\n      }\n      if (icon.points) {\n        icon.polygons.push({ points: icon.points })\n      }\n\n      icons[name] = icon\n    }\n  },\n  icons\n}\n\nlet cursor = 0xd4937\nfunction getId () {\n  return `fa-${(cursor++).toString(16)}`\n}\n</script>\n\n\n\n// WEBPACK FOOTER //\n// node_modules/vue-awesome/components/Icon.vue","var render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('svg',{class:_vm.klass,style:(_vm.style),attrs:{\"version\":\"1.1\",\"role\":_vm.label ? 'img' : 'presentation',\"aria-label\":_vm.label,\"x\":_vm.x,\"y\":_vm.y,\"width\":_vm.width,\"height\":_vm.height,\"viewBox\":_vm.box}},[_vm._t(\"default\",[(_vm.icon && _vm.icon.paths)?_vm._l((_vm.icon.paths),function(path,i){return _c('path',_vm._b({key:(\"path-\" + i)},'path',path,false))}):_vm._e(),_vm._v(\" \"),(_vm.icon && _vm.icon.polygons)?_vm._l((_vm.icon.polygons),function(polygon,i){return _c('polygon',_vm._b({key:(\"polygon-\" + i)},'polygon',polygon,false))}):_vm._e(),_vm._v(\" \"),(_vm.icon && _vm.icon.raw)?[_c('g',{domProps:{\"innerHTML\":_vm._s(_vm.raw)}})]:_vm._e()])],2)}\nvar staticRenderFns = []\nvar esExports = { render: render, staticRenderFns: staticRenderFns }\nexport default esExports\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/vue-loader/lib/template-compiler?{\"id\":\"data-v-4395f258\",\"hasScoped\":false,\"transformToRequire\":{\"video\":[\"src\",\"poster\"],\"source\":\"src\",\"img\":\"src\",\"image\":\"xlink:href\"},\"buble\":{\"transforms\":{}}}!./node_modules/vue-loader/lib/selector.js?type=template&index=0!./node_modules/vue-awesome/components/Icon.vue\n// module id = null\n// module chunks = ","function injectStyle (ssrContext) {\n  require(\"!!../../extract-text-webpack-plugin/dist/loader.js?{\\\"omit\\\":1,\\\"remove\\\":true}!vue-style-loader!css-loader?{\\\"sourceMap\\\":true}!../../vue-loader/lib/style-compiler/index?{\\\"vue\\\":true,\\\"id\\\":\\\"data-v-4395f258\\\",\\\"scoped\\\":false,\\\"hasInlineConfig\\\":false}!../../vue-loader/lib/selector?type=styles&index=0!./Icon.vue\")\n}\nvar normalizeComponent = require(\"!../../vue-loader/lib/component-normalizer\")\n/* script */\nexport * from \"!!babel-loader!../../vue-loader/lib/selector?type=script&index=0!./Icon.vue\"\nimport __vue_script__ from \"!!babel-loader!../../vue-loader/lib/selector?type=script&index=0!./Icon.vue\"\n/* template */\nimport __vue_template__ from \"!!../../vue-loader/lib/template-compiler/index?{\\\"id\\\":\\\"data-v-4395f258\\\",\\\"hasScoped\\\":false,\\\"transformToRequire\\\":{\\\"video\\\":[\\\"src\\\",\\\"poster\\\"],\\\"source\\\":\\\"src\\\",\\\"img\\\":\\\"src\\\",\\\"image\\\":\\\"xlink:href\\\"},\\\"buble\\\":{\\\"transforms\\\":{}}}!../../vue-loader/lib/selector?type=template&index=0!./Icon.vue\"\n/* template functional */\nvar __vue_template_functional__ = false\n/* styles */\nvar __vue_styles__ = injectStyle\n/* scopeId */\nvar __vue_scopeId__ = null\n/* moduleIdentifier (server only) */\nvar __vue_module_identifier__ = null\nvar Component = normalizeComponent(\n  __vue_script__,\n  __vue_template__,\n  __vue_template_functional__,\n  __vue_styles__,\n  __vue_scopeId__,\n  __vue_module_identifier__\n)\n\nexport default Component.exports\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/vue-awesome/components/Icon.vue\n// module id = null\n// module chunks = ","/**\n * This file contains all string constants for the project\n * Use this instead of hardcoding string values\n * HTML and one-time-use messages are an acceptable exception\n */\n\n/* Conditions */\nexport const Condition = {\n  /* Cardiovascular Diseases */\n  AtrialFib: 'Atrial fibrillation / History of irregular heart beat',\n  Defib: 'Defibrillator / Pacemaker',\n  CAD: 'Coronary artery disease / Cardiac stent',\n  CerebralDisease: 'History of cerebral vascular disease / TIA / Stroke',\n  VHD: 'Valvular heart disease / Valve Replacement',\n  HeartFail: 'Heart failure',\n  PVD: 'Peripheral Vascular disease (PVD)',\n  /* Pulmonary Diseases */\n  PulmonaryVascular: 'History of pulmonary vascular disease',\n  PulmDisease: 'Severe COPD, Home Oxygen, Pulmonary HTN',\n  /* Other Diseases */\n  Risk: 'Age ≥ 69 years old OR ≥ 2 risk factors (HTN, DM, OSA, CKD, BMI > 35)',\n  Bleeding: 'Bleeding disorders',\n  Anemia: 'History of anemia in past 12 months or ongoing blood loss',\n  KidneyDisease: 'Chronic kidney disease / on dialysis',\n  Diabetes: 'Diabetes',\n  Malignancy: 'Present malignancy / surgery for malignancy',\n  Hepatic: 'Hepatic disease',\n  Adrenal: 'History of adrenal disease',\n  Pituitary: 'History of pituitary disease',\n  Endocrine: 'History of major systemic endocrine disease',\n  Thyroid: 'Known thyroid disease or on thyroid supplementation',\n  Digoxin: 'Digoxin',\n  Lithium: 'Lithium',\n  Diuretics: 'Diuretics',\n  ACEI: 'ACE-I',\n  ARB: 'ARB',\n  NSAIDS: 'NSAIDS',\n  Anticoagulant: 'Anticoagulants',\n  Antiplatelet: 'Antiplatelet (ASA excluded)',\n  Steroid: 'Systemic steroid use within 6 months',\n};\n\n/* Medical Examinations */\nexport const Exam = {\n  GnS: 'Group and Screen',\n  ECG: 'ECG',\n  CBC: 'CBC',\n  RenPanel: 'Renal Panel (Creat + Lytes)',\n  PTTINR: 'PTT/INR',\n  LFT: 'LFT',\n  Gluc: 'Gluc',\n  HbA1C: 'HbA1C',\n  CXR: 'CXR',\n  TSH: 'TSH',\n};\n\n/* Glossary Entries */\nexport const Glossary = {\n  AtrialFib: 'No extra information.',\n  Defib: 'No extra information.',\n  CAD: 'No extra information.',\n  CardiacStent: 'No extra information.',\n  CerebralDisease: 'No extra information.',\n  PulmonaryVascular: 'No extra information.',\n  VHD: 'No extra information.',\n  HeartFail: 'No extra information.',\n  PVD: 'No extra information.',\n  /* Pulmonary Diseases */\n  PulmDisease: '• Spirometric values AND symptomatic assessment should be sought. \\n' +\n               '• Post Bronchodilator FEV1: 30 - 50% of predicted; FEV1/FVC < 0.70 \\n' +\n               '• History of exacerbations (including prior hospitalizations) should be recorded.\\n' +\n               '• Worsening air flow limitation, greater SOB, reduced exercise capacity, having an ' +\n               'impact on quality of life, and ability to complete activities of daily living should be present. \\n',\n  /* Other Diseases */\n  Risk: 'No extra information.',\n  Bleeding: '• Hemophiliac. \\n' +\n            '• History of extensive investigation due to a bleeding episode. \\n' +\n            '• History of extensive bleeding needing transfusion in previous surgeries. \\n' +\n            '• Bruising easily more than usual. \\n',\n  Anemia: 'No extra information.',\n  ActiveBleeding: 'No extra information.',\n  KidneyDisease: 'No extra information.',\n  Renal: '(AKI). \\n' +\n         '• Chronic kidney disease / on dialysis. \\n' +\n         '• Diabetes. \\n' +\n         '• Heart failure. \\n' +\n         '• Age ≥ 65. \\n' +\n         '• Liver disease. \\n' +\n         '• Use of drugs with nephrotoxic potential in the perioperative period (in particular NSAIDs after surgery). \\n',\n  Diabetes: 'No extra information.',\n  Malignancy: 'No extra information.',\n  Hepatic: '• Alcohol abuse (i.e., female: 14 drinks / week; male: 21 drinks / week). \\n' +\n           '• Jaundice due to liver disease. \\n' +\n           '• All forms of hepatitis. \\n' +\n           '• Cirrhosis; Hepatic cancer. \\n',\n  Adrenal: 'No extra information.',\n  Pituitary: '• Acromegaly. \\n' +\n             '• Cushing’s disease. \\n' +\n             '• Sheehan syndrome. \\n' +\n             '• Growth hormone deficiency. \\n' +\n             '• Hyper/hypo pituitarism. \\n',\n  Endocrine: '(Excluding Diabetes) \\n' +\n             '• Parathyroid disease \\n' +\n             '• Addison’s disease \\n' +\n             '• Cushing’s syndrome \\n' +\n             '• Graves’ disease \\n',\n  Thyroid: 'No extra information.',\n  /* Medications */\n  Digoxin: 'No extra information.',\n  Lithium: 'No extra information.',\n  Diuretics: 'Furosemide; Hydrochlorothiazide; Acetazolamide; Spironolactone; Chlorthalidone',\n  ACEI: 'Captopril; Enalapril; Ramipril; Trandolapril; Perindopril',\n  ARB: 'Valsartan; Candesartan; Irbesartan; Telmisartan; Losartan; Olmesartan',\n  NSAIDS: 'No extra information.',\n  Anticoagulant: 'Warfarin; Heparins; Dabigatran; Apixaban; Rivaroxaban',\n  Antiplatelet: 'Clopidogrel; Ticagrelor; Prasugrel; Aspirin/Dipyridamole (Aggrenox)',\n  Steroid: 'Prednisone; Prednisolone; Methylprednisolone; Hydrocortisone; Dexamethasone; Oral Budesonide',\n};\n\n\n\n// WEBPACK FOOTER //\n// ./src/constants.js","<template>\n  <div id=\"comorbidities\">\n    <div class=\"container\">\n      <div class=\"row\">\n        <div class=\"col-md\">\n          <ul class=\"list-group half\">\n            <li class=\"list-group-item list-group-item-dark\">Cardiovascular Diseases</li>\n            <li :id=\"generateID('li', 'cv', index)\"\n                class=\"list-group-item list-group-item-action lg-item\"\n                v-for=\"(item, index) in cardioDiseases\"\n                :key=\"item.comorbidity\"\n                v-on:click=\"aggregateConditions(cardioDiseases, index)\">\n              <div class=\"row\">\n                <div class=\"col-2\">\n                  <div class=\"form-check\">\n                    <input :id=\"generateID('cb', 'cv', index)\"\n                            class=\"form-check-input\"\n                            type=\"checkbox\"\n                            :checked=\"item.check\">\n                  </div>\n                </div>\n                <div class=\"col\">\n                  <p>{{item.comorbidity}}</p>\n                </div>\n                <div v-if=\"hasEntry(item)\" class=\"col-2\">\n                  <span class=\"badge badge-pill badge-secondary\"\n                        v-b-popover.hover.bottom='`${item.glossary}`' title=\"Glossary\">i</span>\n                </div>\n                <div v-else class=\"col-2\"></div>\n              </div>\n            </li>\n\n            <li class=\"list-group-item list-group-item-dark\">Pulmonary Diseases</li>\n            <li :id=\"generateID('li', 'pd', index)\"\n                class=\"list-group-item list-group-item-action lg-item\"\n                v-for=\"(item, index) in pulmoDiseases\"\n                :key=\"item.comorbidity\"\n                v-on:click=\"aggregateConditions(pulmoDiseases, index)\">\n              <div class=\"row\">\n                <div class=\"col-2\">\n                  <div class=\"form-check\">\n                    <input :id=\"generateID('cb', 'pd', index)\"\n                            class=\"form-check-input\"\n                            type=\"checkbox\"\n                            :checked=\"item.check\">\n                  </div>\n                </div>\n                <div class=\"col\">\n                  <p>{{item.comorbidity}}</p>\n                </div>\n                <div v-if=\"hasEntry(item)\" class=\"col-2\">\n                  <span class=\"badge badge-pill badge-secondary\"\n                        v-b-popover.hover.bottom='`${item.glossary}`' title=\"Glossary\">i</span>\n                </div>\n                <div v-else class=\"col-2\"></div>\n              </div>\n            </li>\n\n            <li class=\"list-group-item list-group-item-dark\">Other Conditions/Diseases</li>\n            <li :id=\"generateID('li', 'other', index)\"\n                class=\"list-group-item list-group-item-action lg-item\"\n                v-for=\"(item, index) in otherDiseases\"\n                :key=\"item.comorbidity\"\n                v-on:click=\"aggregateConditions(otherDiseases, index)\">\n              <div class=\"row\">\n                <div class=\"col-2\">\n                  <div class=\"form-check\">\n                    <input :id=\"generateID('cb', 'other', index)\"\n                            class=\"form-check-input\"\n                            type=\"checkbox\"\n                            :checked=\"item.check\">\n                  </div>\n                </div>\n                <div class=\"col\">\n                  <p>{{item.comorbidity}}</p>\n                </div>\n                <div v-if=\"hasEntry(item)\" class=\"col-2\">\n                  <span class=\"badge badge-pill badge-secondary\"\n                        v-b-popover.hover.bottom='`${item.glossary}`' title=\"Glossary\">i</span>\n                </div>\n                <div v-else class=\"col-2\"></div>\n              </div>\n            </li>\n\n            <li class=\"list-group-item list-group-item-dark\">Medications</li>\n            <li :id=\"generateID('li', 'med', index)\"\n                class=\"list-group-item list-group-item-action lg-item\"\n                v-for=\"(item, index) in medications\"\n                :key=\"item.comorbidity\"\n                v-on:click=\"aggregateConditions(medications, index)\">\n              <div class=\"row\">\n                <div class=\"col-2\">\n                  <div class=\"form-check\">\n                    <input :id=\"generateID('cb', 'med', index)\"\n                            class=\"form-check-input\"\n                            type=\"checkbox\"\n                            :checked=\"item.check\">\n                  </div>\n                </div>\n                <div class=\"col\">\n                  <p>{{item.comorbidity}}</p>\n                </div>\n                <div v-if=\"hasEntry(item)\" class=\"col-2\">\n                  <span class=\"badge badge-pill badge-secondary\"\n                        v-b-popover.hover.bottom='`${item.glossary}`' title=\"Glossary\">i</span>\n                </div>\n                <div v-else class=\"col-2\"></div>\n              </div>\n            </li>\n\n          </ul>\n        </div>\n      </div>\n    </div>\n  </div>\n</template>\n\n<script>\nimport { Condition, Glossary } from '@/constants';\n\nexport default {\n  name: 'ComorbiditiesList',\n  components: {\n  },\n  data() {\n    return {\n      // The array we are going to pass up to the parent component\n      // this gets populated with the current selections\n      currentComorbiditySelection: Object,\n      cardioDiseases: [\n        /* Cardiovascular Diseases */\n        { comorbidity: Condition.AtrialFib, glossary: Glossary.AtrialFib, check: false },\n        { comorbidity: Condition.Defib, glossary: Glossary.Defib, check: false },\n        { comorbidity: Condition.CAD, glossary: Glossary.CAD, check: false },\n        { comorbidity: Condition.CerebralDisease,\n          glossary: Glossary.CerebralDisease,\n          check: false },\n        { comorbidity: Condition.PVD, glossary: Glossary.PVD, check: false },\n        { comorbidity: Condition.VHD, glossary: Glossary.VHD, check: false },\n        { comorbidity: Condition.HeartFail, glossary: Glossary.HeartFail, check: false },\n      ],\n      pulmoDiseases: [\n        /* Pulmonary Diseases */\n        { comorbidity: Condition.PulmonaryVascular,\n          glossary: Glossary.PulmonaryVascular,\n          check: false },\n        { comorbidity: Condition.PulmDisease, glossary: Glossary.PulmDisease, check: false },\n      ],\n      otherDiseases: [\n        /* Other Diseases */\n        { comorbidity: Condition.Risk, glossary: Glossary.Risk, check: false },\n        { comorbidity: Condition.Bleeding, glossary: Glossary.Bleeding, check: false },\n        { comorbidity: Condition.Anemia, glossary: Glossary.Anemia, check: false },\n        { comorbidity: Condition.KidneyDisease, glossary: Glossary.KidneyDisease, check: false },\n        { comorbidity: Condition.Diabetes, glossary: Glossary.Diabetes, check: false },\n        { comorbidity: Condition.Malignancy, glossary: Glossary.Malignancy, check: false },\n        { comorbidity: Condition.Hepatic, glossary: Glossary.Hepatic, check: false },\n        { comorbidity: Condition.Adrenal, glossary: Glossary.Adrenal, check: false },\n        { comorbidity: Condition.Pituitary, glossary: Glossary.Pituitary, check: false },\n        { comorbidity: Condition.Endocrine, glossary: Glossary.Endocrine, check: false },\n        { comorbidity: Condition.Thyroid, glossary: Glossary.Thyroid, check: false },\n      ],\n      medications: [\n        /* Medications */\n        { comorbidity: Condition.Digoxin, glossary: Glossary.Digoxin, check: false },\n        { comorbidity: Condition.Lithium, glossary: Glossary.Lithium, check: false },\n        { comorbidity: Condition.Diuretics, glossary: Glossary.Diuretics, check: false },\n        { comorbidity: Condition.ACEI, glossary: Glossary.ACEI, check: false },\n        { comorbidity: Condition.ARB, glossary: Glossary.ARB, check: false },\n        { comorbidity: Condition.NSAIDS, glossary: Glossary.NSAIDS, check: false },\n        { comorbidity: Condition.Anticoagulant, glossary: Glossary.Anticoagulant, check: false },\n        { comorbidity: Condition.Antiplatelet, glossary: Glossary.Antiplatelet, check: false },\n        { comorbidity: Condition.Steroid, glossary: Glossary.Steroid, check: false },\n      ],\n    };\n  },\n  methods: {\n    /**\n    * Emits an event, signalling to the parent an update to the parent's\n    * data is needed. Passes an object containing a string of the comorbidity\n    * clicked, up to the parent.\n    * Executes whenever a list item or checkbox is clicked.\n    * @param comorbidityArray - The current comorbidity array being used.\n    * @param index - The index of the comorbidity to be passed.\n    */\n    aggregateConditions: function aggregateConditions(comorbidityArray, index) {\n      const array = comorbidityArray;\n      // This method also updates the rendering\n      // of the checkbox when, the list item is clicked.\n      if (array[index].check === false) {\n        array[index].check = true;\n      } else {\n        array[index].check = false;\n      }\n      this.$emit('clickEvent', { currentComorbiditySelection: array[index].comorbidity });\n    },\n    /**\n     * Generates an id based on the type of element and current index of the\n     * element calling it.\n     * @param element - The type of element that the ID is being generated for.\n     * @param prefix - The prefix of the comorbidity.\n     * @param index - The index of the comorbidity to be passed.\n     * @returns A string containing the generated id.\n     */\n    generateID: function generateID(element, prefix, index) {\n      const conditionNameArray = Object.keys(Condition);\n      const pdIndex = this.cardioDiseases.length;\n      const otherIndex = this.pulmoDiseases.length + pdIndex;\n      const medIndex = this.otherDiseases.length + otherIndex;\n\n      switch (prefix) {\n        case 'cv':\n          if (element === 'li') {\n            return `cv_${conditionNameArray[index]}`;\n          }\n          return `cv_checkbox_${conditionNameArray[index]}`;\n        case 'pd':\n          if (element === 'li') {\n            return `pd_${conditionNameArray[index + pdIndex]}`;\n          }\n          return `pd_checkbox_${conditionNameArray[index + pdIndex]}`;\n        case 'other':\n          if (element === 'li') {\n            return `other_${conditionNameArray[index + otherIndex]}`;\n          }\n          return `other_checkbox_${conditionNameArray[index + otherIndex]}`;\n        default:\n          if (element === 'li') {\n            return `med_${conditionNameArray[index + medIndex]}`;\n          }\n          return `med_checkbox_${conditionNameArray[index + medIndex]}`;\n      }\n    },\n    /**\n     * Checks to see if the comorbidity has a glossary entry.\n     * @returns True, if it does. False, otherwise.\n     */\n    hasEntry: function hasEntry(item) {\n      if (item.glossary === 'No extra information.') {\n        return false;\n      }\n      return true;\n    },\n    /**\n     * Resets the data component of ComoListComponent.\n     */\n    resetData: function resetData() {\n      Object.assign(this.$data, this.$options.data.call(this));\n    },\n  },\n};\n</script>\n\n<style>\n#comorbidities{\n  padding-top: 20px;\n  padding-bottom: 20px;\n  margin-bottom: 35px;\n}\n#comorbidities .list-group{\n  height: 100vh;\n  overflow-y: scroll;\n}\n.badge-pill {\n  font-size: small;\n}\n</style>\n\n\n\n// WEBPACK FOOTER //\n// src/components/ComorbiditiesList.vue","var render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('div',{attrs:{\"id\":\"comorbidities\"}},[_c('div',{staticClass:\"container\"},[_c('div',{staticClass:\"row\"},[_c('div',{staticClass:\"col-md\"},[_c('ul',{staticClass:\"list-group half\"},[_c('li',{staticClass:\"list-group-item list-group-item-dark\"},[_vm._v(\"Cardiovascular Diseases\")]),_vm._v(\" \"),_vm._l((_vm.cardioDiseases),function(item,index){return _c('li',{key:item.comorbidity,staticClass:\"list-group-item list-group-item-action lg-item\",attrs:{\"id\":_vm.generateID('li', 'cv', index)},on:{\"click\":function($event){_vm.aggregateConditions(_vm.cardioDiseases, index)}}},[_c('div',{staticClass:\"row\"},[_c('div',{staticClass:\"col-2\"},[_c('div',{staticClass:\"form-check\"},[_c('input',{staticClass:\"form-check-input\",attrs:{\"id\":_vm.generateID('cb', 'cv', index),\"type\":\"checkbox\"},domProps:{\"checked\":item.check}})])]),_vm._v(\" \"),_c('div',{staticClass:\"col\"},[_c('p',[_vm._v(_vm._s(item.comorbidity))])]),_vm._v(\" \"),(_vm.hasEntry(item))?_c('div',{staticClass:\"col-2\"},[_c('span',{directives:[{name:\"b-popover\",rawName:\"v-b-popover.hover.bottom\",value:((\"\" + (item.glossary))),expression:\"`${item.glossary}`\",modifiers:{\"hover\":true,\"bottom\":true}}],staticClass:\"badge badge-pill badge-secondary\",attrs:{\"title\":\"Glossary\"}},[_vm._v(\"i\")])]):_c('div',{staticClass:\"col-2\"})])])}),_vm._v(\" \"),_c('li',{staticClass:\"list-group-item list-group-item-dark\"},[_vm._v(\"Pulmonary Diseases\")]),_vm._v(\" \"),_vm._l((_vm.pulmoDiseases),function(item,index){return _c('li',{key:item.comorbidity,staticClass:\"list-group-item list-group-item-action lg-item\",attrs:{\"id\":_vm.generateID('li', 'pd', index)},on:{\"click\":function($event){_vm.aggregateConditions(_vm.pulmoDiseases, index)}}},[_c('div',{staticClass:\"row\"},[_c('div',{staticClass:\"col-2\"},[_c('div',{staticClass:\"form-check\"},[_c('input',{staticClass:\"form-check-input\",attrs:{\"id\":_vm.generateID('cb', 'pd', index),\"type\":\"checkbox\"},domProps:{\"checked\":item.check}})])]),_vm._v(\" \"),_c('div',{staticClass:\"col\"},[_c('p',[_vm._v(_vm._s(item.comorbidity))])]),_vm._v(\" \"),(_vm.hasEntry(item))?_c('div',{staticClass:\"col-2\"},[_c('span',{directives:[{name:\"b-popover\",rawName:\"v-b-popover.hover.bottom\",value:((\"\" + (item.glossary))),expression:\"`${item.glossary}`\",modifiers:{\"hover\":true,\"bottom\":true}}],staticClass:\"badge badge-pill badge-secondary\",attrs:{\"title\":\"Glossary\"}},[_vm._v(\"i\")])]):_c('div',{staticClass:\"col-2\"})])])}),_vm._v(\" \"),_c('li',{staticClass:\"list-group-item list-group-item-dark\"},[_vm._v(\"Other Conditions/Diseases\")]),_vm._v(\" \"),_vm._l((_vm.otherDiseases),function(item,index){return _c('li',{key:item.comorbidity,staticClass:\"list-group-item list-group-item-action lg-item\",attrs:{\"id\":_vm.generateID('li', 'other', index)},on:{\"click\":function($event){_vm.aggregateConditions(_vm.otherDiseases, index)}}},[_c('div',{staticClass:\"row\"},[_c('div',{staticClass:\"col-2\"},[_c('div',{staticClass:\"form-check\"},[_c('input',{staticClass:\"form-check-input\",attrs:{\"id\":_vm.generateID('cb', 'other', index),\"type\":\"checkbox\"},domProps:{\"checked\":item.check}})])]),_vm._v(\" \"),_c('div',{staticClass:\"col\"},[_c('p',[_vm._v(_vm._s(item.comorbidity))])]),_vm._v(\" \"),(_vm.hasEntry(item))?_c('div',{staticClass:\"col-2\"},[_c('span',{directives:[{name:\"b-popover\",rawName:\"v-b-popover.hover.bottom\",value:((\"\" + (item.glossary))),expression:\"`${item.glossary}`\",modifiers:{\"hover\":true,\"bottom\":true}}],staticClass:\"badge badge-pill badge-secondary\",attrs:{\"title\":\"Glossary\"}},[_vm._v(\"i\")])]):_c('div',{staticClass:\"col-2\"})])])}),_vm._v(\" \"),_c('li',{staticClass:\"list-group-item list-group-item-dark\"},[_vm._v(\"Medications\")]),_vm._v(\" \"),_vm._l((_vm.medications),function(item,index){return _c('li',{key:item.comorbidity,staticClass:\"list-group-item list-group-item-action lg-item\",attrs:{\"id\":_vm.generateID('li', 'med', index)},on:{\"click\":function($event){_vm.aggregateConditions(_vm.medications, index)}}},[_c('div',{staticClass:\"row\"},[_c('div',{staticClass:\"col-2\"},[_c('div',{staticClass:\"form-check\"},[_c('input',{staticClass:\"form-check-input\",attrs:{\"id\":_vm.generateID('cb', 'med', index),\"type\":\"checkbox\"},domProps:{\"checked\":item.check}})])]),_vm._v(\" \"),_c('div',{staticClass:\"col\"},[_c('p',[_vm._v(_vm._s(item.comorbidity))])]),_vm._v(\" \"),(_vm.hasEntry(item))?_c('div',{staticClass:\"col-2\"},[_c('span',{directives:[{name:\"b-popover\",rawName:\"v-b-popover.hover.bottom\",value:((\"\" + (item.glossary))),expression:\"`${item.glossary}`\",modifiers:{\"hover\":true,\"bottom\":true}}],staticClass:\"badge badge-pill badge-secondary\",attrs:{\"title\":\"Glossary\"}},[_vm._v(\"i\")])]):_c('div',{staticClass:\"col-2\"})])])})],2)])])])])}\nvar staticRenderFns = []\nvar esExports = { render: render, staticRenderFns: staticRenderFns }\nexport default esExports\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/vue-loader/lib/template-compiler?{\"id\":\"data-v-e939fdb4\",\"hasScoped\":false,\"transformToRequire\":{\"video\":[\"src\",\"poster\"],\"source\":\"src\",\"img\":\"src\",\"image\":\"xlink:href\"},\"buble\":{\"transforms\":{}}}!./node_modules/vue-loader/lib/selector.js?type=template&index=0!./src/components/ComorbiditiesList.vue\n// module id = null\n// module chunks = ","function injectStyle (ssrContext) {\n  require(\"!!../../node_modules/extract-text-webpack-plugin/dist/loader.js?{\\\"omit\\\":1,\\\"remove\\\":true}!vue-style-loader!css-loader?{\\\"sourceMap\\\":true}!../../node_modules/vue-loader/lib/style-compiler/index?{\\\"vue\\\":true,\\\"id\\\":\\\"data-v-e939fdb4\\\",\\\"scoped\\\":false,\\\"hasInlineConfig\\\":false}!../../node_modules/vue-loader/lib/selector?type=styles&index=0!./ComorbiditiesList.vue\")\n}\nvar normalizeComponent = require(\"!../../node_modules/vue-loader/lib/component-normalizer\")\n/* script */\nexport * from \"!!babel-loader!../../node_modules/vue-loader/lib/selector?type=script&index=0!./ComorbiditiesList.vue\"\nimport __vue_script__ from \"!!babel-loader!../../node_modules/vue-loader/lib/selector?type=script&index=0!./ComorbiditiesList.vue\"\n/* template */\nimport __vue_template__ from \"!!../../node_modules/vue-loader/lib/template-compiler/index?{\\\"id\\\":\\\"data-v-e939fdb4\\\",\\\"hasScoped\\\":false,\\\"transformToRequire\\\":{\\\"video\\\":[\\\"src\\\",\\\"poster\\\"],\\\"source\\\":\\\"src\\\",\\\"img\\\":\\\"src\\\",\\\"image\\\":\\\"xlink:href\\\"},\\\"buble\\\":{\\\"transforms\\\":{}}}!../../node_modules/vue-loader/lib/selector?type=template&index=0!./ComorbiditiesList.vue\"\n/* template functional */\nvar __vue_template_functional__ = false\n/* styles */\nvar __vue_styles__ = injectStyle\n/* scopeId */\nvar __vue_scopeId__ = null\n/* moduleIdentifier (server only) */\nvar __vue_module_identifier__ = null\nvar Component = normalizeComponent(\n  __vue_script__,\n  __vue_template__,\n  __vue_template_functional__,\n  __vue_styles__,\n  __vue_scopeId__,\n  __vue_module_identifier__\n)\n\nexport default Component.exports\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/components/ComorbiditiesList.vue\n// module id = null\n// module chunks = ","import { assert } from '@/main';\nimport { Condition, Exam } from '@/constants';\n\n/**\n * This is the internal collection where all exam information will be saved to.\n * Do not export this or attempt to access it externally!\n */\nconst examCollection = {};\nexamCollection.exams = {};\nexamCollection.conditionalExams = {};\nexamCollection.validityPeriods = {};\n\n/**\n * Adds a new global exam to the system.\n * Not to be called outside this file!\n * @param {String} name The name of the condition\n * @param {String[]} exams The name of the exams required\n * Preconditons: Name and Exams must all be from the Constants file\n * Postconditions: The global examCollection object will be extended to include the new exams\n */\nfunction addExams(name, exams) {\n  assert(Object.values(Condition).indexOf(name) >= 0, `Unknown condition ${name} used for Tag`);\n  for (let i = 0; i < exams.length; i += 1) {\n    assert(Object.values(Exam).indexOf(exams[i]) >= 0, `Unknown exam ${exams[i]} used for Tag`);\n  }\n  examCollection.exams[name] = exams;\n}\n\n/**\n * ConditionalExam is a simple structure containing a condition phrase and the\n * exams which are required if that phrase is true.\n */\nexport class ConditionalExam {\n  constructor(conditionPhrase, exams) {\n    this.conditionPhrase = conditionPhrase;\n    this.exams = exams;\n  }\n}\n\n/**\n * Adds a new global exam to the system.\n * Not to be called outside this file!\n * @param {String} name The name of the condition\n * @param {Object} conditionalExams A mapping of requirements to their conditional exams\n *    Format for conditionalExams:\n *    { requirementName: [examNames] }\n * Preconditons: Name and requirements/exams must all be from the Constants file\n * Postconditions: The global examCollection object will be extended to include\n *                 the new conditional exams as ConditionalExam objects\n */\nfunction addConditionalExams(name, conditionalExams) {\n  const conditionalExamList = [];\n  // Iterating over keys and values\n  const iter = Object.entries(conditionalExams);\n  for (let i = 0; i < iter.length; i += 1) {\n    const conditionPhrase = iter[i][0];\n    const exams = iter[i][1];\n    for (let j = 0; j < exams.length; j += 1) {\n      assert(Object.values(Exam).indexOf(exams[j]) >= 0, `Unknown Exam ${exams[j]} used for tag`);\n    }\n    conditionalExamList.push(new ConditionalExam(conditionPhrase, exams));\n  }\n  examCollection.conditionalExams[name] = conditionalExamList;\n}\n\n/**\n * Adds a new global tag to the system.\n * This is to be used for setting up the knowledge base required for a Preop recommendation.\n * If the need for an examination is dependent on a certain condition, it may be passed in:\n * @param {String} name The name of the condition\n * @param {String[]} exams The names of the exams required\n * @param {Object} conditionalExams (optional) A mapping of requirements to their conditional exams\n *    Format for conditionalExams:\n *    { requirementName: [examNames] }\n * Preconditons: Name and Exams must all be from the Constants file\n * Postconditions: The global examCollection object will be extended to include the new Tag\n */\nexport function Tag(name, exams, conditionalExams = {}) {\n  addExams(name, exams);\n  addConditionalExams(name, conditionalExams);\n}\n\n/**\n * Returns a summary of all exams required for a given condition name.\n * @param {String} name\n */\nexport function GetExams(name) {\n  assert(name in examCollection.exams, `GetExams called with unknown condition ${name}`);\n  if (name in examCollection.exams) {\n    return examCollection.exams[name];\n  }\n  return [];\n}\n\n/**\n * Returns a comprehensive summary of the entire knowledge base of the system.\n * This should be used for external access instead of directly referencing examCollection\n */\nexport function GetAllExams() {\n  return examCollection;\n}\n\n/**\n * Returns a list of ConditionalExam objects associated with the given condition name\n */\nexport function GetConditionalExams(name) {\n  assert(name in examCollection.conditionalExams, `GetConditionalExams called with unknown condition ${name}`);\n  if (name in examCollection.conditionalExams) {\n    return examCollection.conditionalExams[name];\n  }\n  return [];\n}\n\n\n/**\n * Sets the validity period for a given exam\n * Validity period is the time window before surgery in which an exam must be performed\n * @param {String} exam The name of the exam\n * @param {String} validityString A string of the format \"x months\" or \"x days\"\n * Preconditions: 'exam' must be from the constants file\n * Postconditions: examCollection.validityPeriods will contain the new validity period\n */\nexport function Validity(exam, validityString) {\n  assert(Object.values(Exam).indexOf(exam) >= 0, `Unknown exam \"${exam}\" used in Validity`);\n  examCollection.validityPeriods[exam] = validityString;\n}\n\n/**\n * Get the validity period for a given exam\n * @param {String} exam The name of the exam in question\n * Preconditions: exam must be known and must have a registered validity period\n */\nexport function GetExamValidity(exam) {\n  assert(Object.values(Exam).indexOf(exam) >= 0, `GetExamValidity called with unknown exam: ${exam}`);\n  return examCollection.validityPeriods[exam];\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/tag.js","import { Tag, Validity } from '@/tag';\nimport { Condition, Exam } from '@/constants';\n\n/** Tag definitions\n * These definitions are of the format: Tag(condition, [exams])\n * A third, optional argument may be passed to include any conditional exams\n * The format for this third argument is: { 'ConditionPhrase?': [Exams if True] }\n * Define all tags here and they will be loaded into the system on import\n *\n * Format:\n * Tag(Condition.NAME, [Exam.NAME],\n  { 'Is this requirement met?': [Exam.NAME] });\n */\n\n/* Cardiovascular Diseases */\nTag(Condition.AtrialFib, [Exam.ECG]);\nTag(Condition.Defib, [Exam.ECG]);\nTag(Condition.CAD, [Exam.ECG]);\nTag(Condition.CerebralDisease, [Exam.ECG]);\nTag(Condition.PVD, [Exam.ECG]);\nTag(Condition.VHD, [Exam.ECG]);\nTag(Condition.HeartFail, [Exam.ECG, Exam.RenPanel]);\n/* Pulmonary Diseases */\nTag(Condition.PulmonaryVascular, [Exam.ECG]);\nTag(Condition.PulmDisease, [Exam.ECG, Exam.CBC, Exam.CXR]);\n/* Other Diseases */\nTag(Condition.Risk, [Exam.ECG]);\nTag(Condition.Anemia, [Exam.CBC]);\nTag(Condition.Bleeding, [Exam.CBC, Exam.PTTINR]);\n// Tag(Condition.ActiveBleeding, [Exam.CBC]);\nTag(Condition.KidneyDisease, [Exam.CBC, Exam.RenPanel]);\nTag(Condition.Diabetes, [Exam.ECG, Exam.RenPanel, Exam.Gluc, Exam.HbA1C]);\nTag(Condition.Malignancy, [Exam.CBC, Exam.CXR],\n  { 'Is patient on chemo?': [Exam.ECG, Exam.RenPanel, Exam.PTTINR] });\nTag(Condition.Hepatic, [Exam.CBC, Exam.RenPanel, Exam.PTTINR, Exam.LFT]);\nTag(Condition.Adrenal, [Exam.RenPanel]);\nTag(Condition.Pituitary, [Exam.RenPanel]);\nTag(Condition.Endocrine, [Exam.RenPanel]);\nTag(Condition.Thyroid, [Exam.TSH]);\n/* Medications */\nTag(Condition.Digoxin, [Exam.ECG, Exam.RenPanel]);\nTag(Condition.Lithium, [Exam.RenPanel]);\nTag(Condition.Diuretics, [Exam.RenPanel]);\nTag(Condition.ACEI, [Exam.RenPanel]);\nTag(Condition.ARB, [Exam.RenPanel]);\nTag(Condition.NSAIDS, [Exam.RenPanel]);\nTag(Condition.Anticoagulant, [Exam.CBC, Exam.RenPanel],\n  { 'Is patient on Wafarin/Heparins?': [Exam.PTTINR] });\nTag(Condition.Antiplatelet, [Exam.CBC, Exam.RenPanel],\n  { 'Is patient on Wafarin/Heparins?': [Exam.PTTINR] });\nTag(Condition.Steroid, [Exam.RenPanel, Exam.Gluc]);\n\n\n/** Defining the validity periods for exams before surgery\n * The format is Validity(Exam.NAME, 'explanation of validity period');\n */\nValidity(Exam.GnS, 'as per local policy');\nValidity(Exam.ECG, 'should be done within 3 months of surgery');\nValidity(Exam.CBC, 'should be done within 3 months of surgery');\nValidity(Exam.RenPanel, 'should be done within 3 months of surgery');\nValidity(Exam.PTTINR, 'should be done within 3 months of surgery');\nValidity(Exam.LFT, 'should be done within 3 months of surgery');\nValidity(Exam.Gluc, 'should be done within 3 months of surgery');\nValidity(Exam.HbA1C, 'should be done within 3 months of surgery');\nValidity(Exam.CXR, 'should be done within 6 months of surgery');\nValidity(Exam.TSH, 'should be done within 6 months of surgery');\n\n\n\n// WEBPACK FOOTER //\n// ./src/configuration.js","// Singleton data, not a class\nimport '@/configuration';\nimport { GetExams, GetConditionalExams, ConditionalExam, GetExamValidity } from '@/tag';\nimport { Exam } from '@/constants';\n\n/**\n * ExamSummary is a simple data struct with two properties:\n * @param exams {String[]}: a list of exams to be performed\n * @param conditionalExams {ConditionalExam[]} a list of ConditionalExams to be optionally performed\n */\nexport class ExamSummary {\n  constructor(exams, conditionalExams) {\n    this.exams = exams;\n    this.conditionalExams = conditionalExams;\n  }\n}\n\n/**\n * Given a list of patient conditions, return an ExamSummary object\n * The ConditionalExams returned will be prefiltered so as to not include any\n * already required exams or any redundant conditional phrases (i.e. no new exams)\n * @param {String[]} patientConditions\n * @returns {ExamSummary} Summary of examinations to be performed\n */\nexport function PatientExamsNeeded(patientConditions) {\n  const examAggregation = new Set();\n  const conditionalExamAggregation = [];\n\n  for (let i = 0; i < patientConditions.length; i += 1) {\n    const exams = GetExams(patientConditions[i]);\n    for (let j = 0; j < exams.length; j += 1) {\n      examAggregation.add(exams[j]);\n    }\n  }\n\n  // conditionPhrasesUsed is used to dedupe conditional phrases that are equivalent\n  // It may come up anytime that a single row of the grid is broken up into Tags\n  const conditionPhrasesUsed = [];\n\n  for (let i = 0; i < patientConditions.length; i += 1) {\n    // Filter out any previously used condition phrases\n    const conditionalExams = GetConditionalExams(patientConditions[i])\n      .filter(c => !(conditionPhrasesUsed.includes(c.conditionPhrase)));\n    // Add remaining phrases to conditionPhrasesUsed\n    conditionPhrasesUsed.push(...conditionalExams.map(c => c.conditionPhrase));\n\n    for (let j = 0; j < conditionalExams.length; j += 1) {\n      // Make a new copy of the ConditionalExam with any preconsidered exams filtered out\n      const ce = new ConditionalExam(\n        conditionalExams[j].conditionPhrase,\n        conditionalExams[j].exams.filter(e => !(examAggregation.has(e))),\n      );\n      // Only aggregate this conditionalExam if it is not entirely preconsidered\n      if (ce.exams.length > 0) {\n        conditionalExamAggregation.push(ce);\n      }\n    }\n  }\n\n  // Unconditionally perform a Group and Screen\n  return new ExamSummary([Exam.GnS, ...examAggregation], conditionalExamAggregation);\n}\n\n/**\n * Get the validity period for a given exam\n * @param {String} exam The name of the exam in question\n */\nexport function ExamValidity(exam) {\n  return GetExamValidity(exam);\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/PreopRecommendation.js","<template>\n  <div id=\"app\">\n    <b-modal ref=\"disclaimer\"\n             id=\"disclaimer\"\n             size=\"lg\"\n             centered\n             title=\"Disclaimer\"\n             ok-only\n             ok-title=\"I Understand\"\n             no-close-on-backdrop\n             hide-header-close\n             footer-class=\"notflex\"\n             header-class=\"notflex\">\n      <p>\n        * For patients having surgical\n        procedures under local/topical\n        anesthesia, and no new/worsened\n        symptoms, evidence suggests there is\n        no need for testing.\n      </p>\n      <p>\n        * For patients with\n        complex or uncommon surgical or\n        medical conditions, tests beyond these\n        guidelines may be appropriate based on\n        the clinical judgement of the health\n        care provider\n      </p>\n    </b-modal>\n\n    <b-modal ref=\"results\" id=\"results\"\n             size=\"lg\" centered\n             title=\"Results:\" ok-only\n             ok-title=\"OK\" no-close-on-backdrop\n             hide-header-close footer-class=\"notflex\"\n             header-class=\"notflex\">\n\n             <div class=\"container\">\n               <div class=\"row\">\n                 <div class=\"col\">\n                   <h4>Patient's Comorbidities:</h4>\n                   <div class=\"container\" style=\"text-align: left;\">\n                     <!-- this is the other place binding for the props is being used -->\n                     <ul v-for=\"item in resultArray\"\n                         :key=\"item\">\n                         <li>{{item}}</li>\n                     </ul>\n                     </div>\n                 </div>\n                 <div class=\"col\">\n                   <h4>Preoperative Exams:</h4>\n                   <div class=\"container\" style=\"text-align: left;\">\n                      <p id=\"exams\"\n                      v-for=\"item in exams\"\n                      :key=\"item\" >\n                        <b>{{ item }}</b>\n                        {{ getValidity(item)}}\n                      </p>\n                   </div>\n                      <div id=\"conditional-exams\" class=\"text-left\"\n                      v-for=\"(item, index) in conditionalExams\"\n                      :key=\"index\">\n                        <br/>\n                        <p>\n                        <b>{{ item.conditionPhrase }}</b>\n                        <b>If so:</b>\n                        </p>\n                        <p v-for=\"(examName, index) in item.exams\" :key=\"index\">\n                          <b>{{ examName }}</b>\n                          {{ getValidity(examName) }}\n                        </p>\n                      </div>\n                 </div>\n               </div>\n             </div>\n    </b-modal>\n\n    <b-navbar sticky id=\"nav\" type=\"dark\" variant=\"dark\">\n      <a id=\"menu\" class=\"btn\" @click=\"sidebarActive = !sidebarActive\">\n        <icon name=\"bars\"></icon>\n      </a>\n      <div class=\"col\">\n        <h5>Saskatchewan Preoperative Guidelines (Draft)</h5>\n      </div>\n    </b-navbar>\n\n    <div class=\"wrapper\">\n      <!-- Sidebar -->\n      <nav id=\"sidebar\" :class=\"sidebarActive ? 'active': ''\">\n          <div class=\"sidebar-header\">\n              <h3>Instructions:</h3>\n              <ol>\n                <li>Select the patients comorbidities.</li>\n                <li>Click the submit button at the bottom to view the tests.</li>\n              </ol>\n              <li>Hover/tap comorbidities with an icon on the right to\n                  get examples/definitions.\n              </li>\n              <li>Click the reset button to clear selections</li>\n          </div>\n      </nav>\n\n      <!-- Page Content -->\n      <div class=\"container\">\n        <div class=\"row\">\n          <div class=\"col\">\n            <ComorbitiesList ref=\"comoList\" @clickEvent=\"updateArray\"></ComorbitiesList>\n          </div>\n        </div>\n      </div>\n    </div>\n    <div class=\"foot\">\n      <div class=\"buttons\">\n          <b-btn size=\"sm\"\n                variant=\"primary\"\n                style=\"margin-right: 100px;\"\n                @click=\"getExams()\">Submit</b-btn>\n          <b-btn size=\"sm\" variant=\"danger\" @click=\"resetData()\">Reset</b-btn>\n      </div>\n    </div>\n  </div>\n</template>\n\n<script>\nimport ComorbitiesList from '@/components/ComorbiditiesList';\nimport { PatientExamsNeeded, ExamValidity } from '@/PreopRecommendation';\nimport Icon from 'vue-awesome/components/Icon';\n\nexport default {\n  name: 'App',\n  components: {\n    ComorbitiesList,\n    Icon,\n  },\n  data() {\n    return {\n      sidebarActive: true,\n      resultArray: [],\n      exams: [],\n      conditionalExams: [],\n    };\n  },\n  mounted() {\n    this.$refs.disclaimer.show();\n  },\n  methods: {\n    updateArray: function updateArray(comorbidity) {\n      if (this.resultArray.includes(comorbidity.currentComorbiditySelection)) {\n        // Apparently there's no delete by index, so this is the best we can do. :(\n        this.resultArray.splice(this.resultArray.indexOf(comorbidity.currentComorbiditySelection),\n          1);\n      } else {\n        this.resultArray.push(comorbidity.currentComorbiditySelection);\n      }\n    },\n    /**\n     * Populates the exams array using the resultArray passed down\n     * from the parent. Clearing the previous exams each time it is called\n     * and then pushing the new values.\n     */\n    getExams: function getExams() {\n      const examSummary = PatientExamsNeeded(this.resultArray);\n      this.exams = examSummary.exams;\n      this.conditionalExams = examSummary.conditionalExams;\n      this.$refs.results.show();\n    },\n    /**\n     * Gets a validity period\n     * @param String exam\n     * @returns validity period for that exam\n     */\n    getValidity: function getValidity(exam) {\n      return ExamValidity(exam);\n    },\n    /**\n     * Resets the data of ComoListComponent.\n     */\n    resetData: function resetData() {\n      this.$refs.comoList.resetData();\n      Object.assign(this.$data, this.$options.data.call(this));\n    },\n  },\n};\n</script>\n\n<style>\n#app {\n  font-family: 'Avenir', Helvetica, Arial, sans-serif;\n  -webkit-font-smoothing: antialiased;\n  -moz-osx-font-smoothing: grayscale;\n  text-align: center;\n  color: #2c3e50;\n  overflow: hidden;\n}\n#nav h5 {\n  color: white;\n}\n/* .list {\n  max-height: 90vh;;\n} */\n.notflex {\n  display: block;\n}\n.modal-backdrop.show {\n  opacity: 1;\n}\n.wrapper {\n  display: flex;\n  width: 100%;\n  overflow: hidden;\n}\n#sidebar {\n  width: 250px;\n  /* position: fixed; */\n  left: 0;\n  height: 100vh;\n  z-index: 999;\n  background: #ffffff;\n  color: rgb(0, 0, 0);\n  transition: all 0.3s;\n  padding-top: 20px;\n}\n#sidebar.active {\n  margin-left: -250px;\n}\n/* @media (max-width: 768px) {\n  #sidebar {\n      margin-left: -250px;\n  }\n  #sidebar.active {\n      margin-left: 0;\n      padding-left: 15px;\n      padding-right: 15px;\n  }\n} */\n#menu {\n  color: white;\n  border-radius: 50%;\n}\n#menu:active {\n  background-color: rgb(102, 102, 102);\n  transition: background-color 0.01s ease;\n}\n.foot {\n  width: 100%;\n  position: fixed;\n  bottom: 0px;\n  padding: 10px;\n  z-index: 1000;\n  background-color: #343a40;\n}\n</style>\n\n\n\n// WEBPACK FOOTER //\n// src/App.vue","var render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('div',{attrs:{\"id\":\"app\"}},[_c('b-modal',{ref:\"disclaimer\",attrs:{\"id\":\"disclaimer\",\"size\":\"lg\",\"centered\":\"\",\"title\":\"Disclaimer\",\"ok-only\":\"\",\"ok-title\":\"I Understand\",\"no-close-on-backdrop\":\"\",\"hide-header-close\":\"\",\"footer-class\":\"notflex\",\"header-class\":\"notflex\"}},[_c('p',[_vm._v(\"\\n      * For patients having surgical\\n      procedures under local/topical\\n      anesthesia, and no new/worsened\\n      symptoms, evidence suggests there is\\n      no need for testing.\\n    \")]),_vm._v(\" \"),_c('p',[_vm._v(\"\\n      * For patients with\\n      complex or uncommon surgical or\\n      medical conditions, tests beyond these\\n      guidelines may be appropriate based on\\n      the clinical judgement of the health\\n      care provider\\n    \")])]),_vm._v(\" \"),_c('b-modal',{ref:\"results\",attrs:{\"id\":\"results\",\"size\":\"lg\",\"centered\":\"\",\"title\":\"Results:\",\"ok-only\":\"\",\"ok-title\":\"OK\",\"no-close-on-backdrop\":\"\",\"hide-header-close\":\"\",\"footer-class\":\"notflex\",\"header-class\":\"notflex\"}},[_c('div',{staticClass:\"container\"},[_c('div',{staticClass:\"row\"},[_c('div',{staticClass:\"col\"},[_c('h4',[_vm._v(\"Patient's Comorbidities:\")]),_vm._v(\" \"),_c('div',{staticClass:\"container\",staticStyle:{\"text-align\":\"left\"}},_vm._l((_vm.resultArray),function(item){return _c('ul',{key:item},[_c('li',[_vm._v(_vm._s(item))])])}))]),_vm._v(\" \"),_c('div',{staticClass:\"col\"},[_c('h4',[_vm._v(\"Preoperative Exams:\")]),_vm._v(\" \"),_c('div',{staticClass:\"container\",staticStyle:{\"text-align\":\"left\"}},_vm._l((_vm.exams),function(item){return _c('p',{key:item,attrs:{\"id\":\"exams\"}},[_c('b',[_vm._v(_vm._s(item))]),_vm._v(\"\\n                      \"+_vm._s(_vm.getValidity(item))+\"\\n                    \")])})),_vm._v(\" \"),_vm._l((_vm.conditionalExams),function(item,index){return _c('div',{key:index,staticClass:\"text-left\",attrs:{\"id\":\"conditional-exams\"}},[_c('br'),_vm._v(\" \"),_c('p',[_c('b',[_vm._v(_vm._s(item.conditionPhrase))]),_vm._v(\" \"),_c('b',[_vm._v(\"If so:\")])]),_vm._v(\" \"),_vm._l((item.exams),function(examName,index){return _c('p',{key:index},[_c('b',[_vm._v(_vm._s(examName))]),_vm._v(\"\\n                        \"+_vm._s(_vm.getValidity(examName))+\"\\n                      \")])})],2)})],2)])])]),_vm._v(\" \"),_c('b-navbar',{attrs:{\"sticky\":\"\",\"id\":\"nav\",\"type\":\"dark\",\"variant\":\"dark\"}},[_c('a',{staticClass:\"btn\",attrs:{\"id\":\"menu\"},on:{\"click\":function($event){_vm.sidebarActive = !_vm.sidebarActive}}},[_c('icon',{attrs:{\"name\":\"bars\"}})],1),_vm._v(\" \"),_c('div',{staticClass:\"col\"},[_c('h5',[_vm._v(\"Saskatchewan Preoperative Guidelines (Draft)\")])])]),_vm._v(\" \"),_c('div',{staticClass:\"wrapper\"},[_c('nav',{class:_vm.sidebarActive ? 'active': '',attrs:{\"id\":\"sidebar\"}},[_vm._m(0)]),_vm._v(\" \"),_c('div',{staticClass:\"container\"},[_c('div',{staticClass:\"row\"},[_c('div',{staticClass:\"col\"},[_c('ComorbitiesList',{ref:\"comoList\",on:{\"clickEvent\":_vm.updateArray}})],1)])])]),_vm._v(\" \"),_c('div',{staticClass:\"foot\"},[_c('div',{staticClass:\"buttons\"},[_c('b-btn',{staticStyle:{\"margin-right\":\"100px\"},attrs:{\"size\":\"sm\",\"variant\":\"primary\"},on:{\"click\":function($event){_vm.getExams()}}},[_vm._v(\"Submit\")]),_vm._v(\" \"),_c('b-btn',{attrs:{\"size\":\"sm\",\"variant\":\"danger\"},on:{\"click\":function($event){_vm.resetData()}}},[_vm._v(\"Reset\")])],1)])],1)}\nvar staticRenderFns = [function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('div',{staticClass:\"sidebar-header\"},[_c('h3',[_vm._v(\"Instructions:\")]),_vm._v(\" \"),_c('ol',[_c('li',[_vm._v(\"Select the patients comorbidities.\")]),_vm._v(\" \"),_c('li',[_vm._v(\"Click the submit button at the bottom to view the tests.\")])]),_vm._v(\" \"),_c('li',[_vm._v(\"Hover/tap comorbidities with an icon on the right to\\n                get examples/definitions.\\n            \")]),_vm._v(\" \"),_c('li',[_vm._v(\"Click the reset button to clear selections\")])])}]\nvar esExports = { render: render, staticRenderFns: staticRenderFns }\nexport default esExports\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/vue-loader/lib/template-compiler?{\"id\":\"data-v-e0ab5762\",\"hasScoped\":false,\"transformToRequire\":{\"video\":[\"src\",\"poster\"],\"source\":\"src\",\"img\":\"src\",\"image\":\"xlink:href\"},\"buble\":{\"transforms\":{}}}!./node_modules/vue-loader/lib/selector.js?type=template&index=0!./src/App.vue\n// module id = null\n// module chunks = ","function injectStyle (ssrContext) {\n  require(\"!!../node_modules/extract-text-webpack-plugin/dist/loader.js?{\\\"omit\\\":1,\\\"remove\\\":true}!vue-style-loader!css-loader?{\\\"sourceMap\\\":true}!../node_modules/vue-loader/lib/style-compiler/index?{\\\"vue\\\":true,\\\"id\\\":\\\"data-v-e0ab5762\\\",\\\"scoped\\\":false,\\\"hasInlineConfig\\\":false}!../node_modules/vue-loader/lib/selector?type=styles&index=0!./App.vue\")\n}\nvar normalizeComponent = require(\"!../node_modules/vue-loader/lib/component-normalizer\")\n/* script */\nexport * from \"!!babel-loader!../node_modules/vue-loader/lib/selector?type=script&index=0!./App.vue\"\nimport __vue_script__ from \"!!babel-loader!../node_modules/vue-loader/lib/selector?type=script&index=0!./App.vue\"\n/* template */\nimport __vue_template__ from \"!!../node_modules/vue-loader/lib/template-compiler/index?{\\\"id\\\":\\\"data-v-e0ab5762\\\",\\\"hasScoped\\\":false,\\\"transformToRequire\\\":{\\\"video\\\":[\\\"src\\\",\\\"poster\\\"],\\\"source\\\":\\\"src\\\",\\\"img\\\":\\\"src\\\",\\\"image\\\":\\\"xlink:href\\\"},\\\"buble\\\":{\\\"transforms\\\":{}}}!../node_modules/vue-loader/lib/selector?type=template&index=0!./App.vue\"\n/* template functional */\nvar __vue_template_functional__ = false\n/* styles */\nvar __vue_styles__ = injectStyle\n/* scopeId */\nvar __vue_scopeId__ = null\n/* moduleIdentifier (server only) */\nvar __vue_module_identifier__ = null\nvar Component = normalizeComponent(\n  __vue_script__,\n  __vue_template__,\n  __vue_template_functional__,\n  __vue_styles__,\n  __vue_scopeId__,\n  __vue_module_identifier__\n)\n\nexport default Component.exports\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/App.vue\n// module id = null\n// module chunks = ","// The Vue build version to load with the `import` command\n// (runtime-only or standalone) has been set in webpack.base.conf with an alias.\n/* eslint-disable */\nimport 'bootstrap/dist/css/bootstrap.css';\nimport 'bootstrap-vue/dist/bootstrap-vue.css';\nimport 'vue-awesome/icons';\nimport Vue from 'vue';\nimport BootstrapVue from 'bootstrap-vue';\nimport App from './App';\nimport Icon from 'vue-awesome/components/Icon';\n\nVue.component('icon', Icon)\nVue.use(BootstrapVue);\nVue.config.productionTip = false;\n\n/* eslint-disable no-new */\nnew Vue({\n  el: '#app',\n  components: { App },\n  template: '<App/>',\n});\n\n/**\n * Asserts a condition is true and prints a message to console otherwise.\n * Becomes a null operation when in a production deployment\n * @param {Boolean} condition The condition to be verified\n * @param {String} message Message to print out on failure\n */\nexport function assert(condition, message) {\n  if (!Vue.config.productionTip && !condition) {\n    // eslint-disable-next-line no-console\n    console.log(`ASSERT failed: ${message}`);\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/main.js"],"sourceRoot":""}